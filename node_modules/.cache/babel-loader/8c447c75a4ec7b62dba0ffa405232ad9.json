{"ast":null,"code":"var _jsxFileName = \"/Users/jeongseongdu/Downloads/git3/TEAM_5B/src/components/SearchInput/DesktopSearchInput.tsx\",\n    _s = $RefreshSig$();\n\nimport { useRef } from 'react';\nimport { MagnifierIcon } from 'assets';\nimport { useAppSelector, useAppDispatch } from 'hooks';\nimport { setSearchString } from 'store';\nimport SearchList from 'components/SearchList';\nimport styles from './search-input.module.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction DesktopSearchInput() {\n  _s();\n\n  const listRef = useRef(null);\n  const dispatch = useAppDispatch();\n  const searchString = useAppSelector(state => state.searchString.searchString);\n\n  const onChange = e => {\n    dispatch(setSearchString(e.target.value));\n  };\n\n  const onKeyDown = e => {\n    if (e.key === 'ArrowDown') {\n      var _listRef$current;\n\n      e.preventDefault();\n      const firstListItem = (_listRef$current = listRef.current) === null || _listRef$current === void 0 ? void 0 : _listRef$current.firstElementChild;\n      firstListItem.focus();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    \"data-id\": \"desktop\",\n    className: styles['desktop-search-input'],\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles['input-container'],\n      children: [/*#__PURE__*/_jsxDEV(MagnifierIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"search\",\n        className: styles.input,\n        placeholder: \"\\uC9C8\\uD658\\uBA85\\uC744 \\uC785\\uB825\\uD574 \\uC8FC\\uC138\\uC694.\",\n        value: searchString,\n        onChange: onChange,\n        onKeyDown: onKeyDown\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      tabIndex: -1,\n      className: styles.button,\n      children: \"\\uAC80\\uC0C9\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchList, {\n      listRef: listRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DesktopSearchInput, \"b5IVzF2OWohPZr7gbSR4asV7zn0=\", false, function () {\n  return [useAppDispatch, useAppSelector];\n});\n\n_c = DesktopSearchInput;\nexport default DesktopSearchInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"DesktopSearchInput\");","map":{"version":3,"names":["useRef","MagnifierIcon","useAppSelector","useAppDispatch","setSearchString","SearchList","styles","DesktopSearchInput","listRef","dispatch","searchString","state","onChange","e","target","value","onKeyDown","key","preventDefault","firstListItem","current","firstElementChild","focus","input","button"],"sources":["/Users/jeongseongdu/Downloads/git3/TEAM_5B/src/components/SearchInput/DesktopSearchInput.tsx"],"sourcesContent":["import { ChangeEvent, KeyboardEvent, useRef } from 'react';\n\nimport { MagnifierIcon } from 'assets';\nimport { useAppSelector, useAppDispatch } from 'hooks';\nimport { setSearchString } from 'store';\n\nimport SearchList from 'components/SearchList';\n\nimport styles from './search-input.module.scss';\n\nfunction DesktopSearchInput() {\n  const listRef = useRef<HTMLUListElement>(null);\n\n  const dispatch = useAppDispatch();\n  const searchString = useAppSelector(\n    (state) => state.searchString.searchString\n  );\n\n  const onChange = (e: ChangeEvent<HTMLInputElement>) => {\n    dispatch(setSearchString(e.target.value));\n  };\n\n  const onKeyDown = (e: KeyboardEvent<HTMLInputElement>) => {\n    if (e.key === 'ArrowDown') {\n      e.preventDefault();\n      const firstListItem = listRef.current?.firstElementChild as HTMLLIElement;\n      firstListItem.focus();\n    }\n  };\n\n  return (\n    <div data-id=\"desktop\" className={styles['desktop-search-input']}>\n      <div className={styles['input-container']}>\n        <MagnifierIcon />\n        <input\n          type=\"search\"\n          className={styles.input}\n          placeholder=\"질환명을 입력해 주세요.\"\n          value={searchString}\n          onChange={onChange}\n          onKeyDown={onKeyDown}\n        />\n      </div>\n      <button type=\"button\" tabIndex={-1} className={styles.button}>\n        검색\n      </button>\n      <SearchList listRef={listRef} />\n    </div>\n  );\n}\n\nexport default DesktopSearchInput;\n"],"mappings":";;;AAAA,SAAqCA,MAArC,QAAmD,OAAnD;AAEA,SAASC,aAAT,QAA8B,QAA9B;AACA,SAASC,cAAT,EAAyBC,cAAzB,QAA+C,OAA/C;AACA,SAASC,eAAT,QAAgC,OAAhC;AAEA,OAAOC,UAAP,MAAuB,uBAAvB;AAEA,OAAOC,MAAP,MAAmB,4BAAnB;;;AAEA,SAASC,kBAAT,GAA8B;EAAA;;EAC5B,MAAMC,OAAO,GAAGR,MAAM,CAAmB,IAAnB,CAAtB;EAEA,MAAMS,QAAQ,GAAGN,cAAc,EAA/B;EACA,MAAMO,YAAY,GAAGR,cAAc,CAChCS,KAAD,IAAWA,KAAK,CAACD,YAAN,CAAmBA,YADG,CAAnC;;EAIA,MAAME,QAAQ,GAAIC,CAAD,IAAsC;IACrDJ,QAAQ,CAACL,eAAe,CAACS,CAAC,CAACC,MAAF,CAASC,KAAV,CAAhB,CAAR;EACD,CAFD;;EAIA,MAAMC,SAAS,GAAIH,CAAD,IAAwC;IACxD,IAAIA,CAAC,CAACI,GAAF,KAAU,WAAd,EAA2B;MAAA;;MACzBJ,CAAC,CAACK,cAAF;MACA,MAAMC,aAAa,uBAAGX,OAAO,CAACY,OAAX,qDAAG,iBAAiBC,iBAAvC;MACAF,aAAa,CAACG,KAAd;IACD;EACF,CAND;;EAQA,oBACE;IAAK,WAAQ,SAAb;IAAuB,SAAS,EAAEhB,MAAM,CAAC,sBAAD,CAAxC;IAAA,wBACE;MAAK,SAAS,EAAEA,MAAM,CAAC,iBAAD,CAAtB;MAAA,wBACE,QAAC,aAAD;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QACE,IAAI,EAAC,QADP;QAEE,SAAS,EAAEA,MAAM,CAACiB,KAFpB;QAGE,WAAW,EAAC,iEAHd;QAIE,KAAK,EAAEb,YAJT;QAKE,QAAQ,EAAEE,QALZ;QAME,SAAS,EAAEI;MANb;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAYE;MAAQ,IAAI,EAAC,QAAb;MAAsB,QAAQ,EAAE,CAAC,CAAjC;MAAoC,SAAS,EAAEV,MAAM,CAACkB,MAAtD;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAZF,eAeE,QAAC,UAAD;MAAY,OAAO,EAAEhB;IAArB;MAAA;MAAA;MAAA;IAAA,QAfF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAmBD;;GAvCQD,kB;UAGUJ,c,EACID,c;;;KAJdK,kB;AAyCT,eAAeA,kBAAf"},"metadata":{},"sourceType":"module"}