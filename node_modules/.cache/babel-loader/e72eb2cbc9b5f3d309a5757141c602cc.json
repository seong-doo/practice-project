{"ast":null,"code":"import { combineReducers, configureStore } from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport filteredList, { setFilteredList } from 'store/filteredList';\nimport searchString, { setSearchString } from 'store/searchString';\nconst rootReducer = combineReducers({\n  searchString,\n  filteredList\n});\nconst store = configureStore({\n  reducer: rootReducer,\n  middleware: getDefaultMiddleware => getDefaultMiddleware().concat(logger)\n});\nexport { setFilteredList, setSearchString };\nexport default store;","map":{"version":3,"names":["combineReducers","configureStore","logger","filteredList","setFilteredList","searchString","setSearchString","rootReducer","store","reducer","middleware","getDefaultMiddleware","concat"],"sources":["/Users/jeongseongdu/Downloads/git3/TEAM_5B/src/store/index.ts"],"sourcesContent":["import { combineReducers, configureStore } from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\n\nimport filteredList, { setFilteredList } from 'store/filteredList';\nimport searchString, { setSearchString } from 'store/searchString';\n\nconst rootReducer = combineReducers({ searchString, filteredList });\n\nconst store = configureStore({\n  reducer: rootReducer,\n  middleware: (getDefaultMiddleware) => getDefaultMiddleware().concat(logger),\n});\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n\nexport { setFilteredList, setSearchString };\nexport default store;\n"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,cAA1B,QAAgD,kBAAhD;AACA,OAAOC,MAAP,MAAmB,cAAnB;AAEA,OAAOC,YAAP,IAAuBC,eAAvB,QAA8C,oBAA9C;AACA,OAAOC,YAAP,IAAuBC,eAAvB,QAA8C,oBAA9C;AAEA,MAAMC,WAAW,GAAGP,eAAe,CAAC;EAAEK,YAAF;EAAgBF;AAAhB,CAAD,CAAnC;AAEA,MAAMK,KAAK,GAAGP,cAAc,CAAC;EAC3BQ,OAAO,EAAEF,WADkB;EAE3BG,UAAU,EAAGC,oBAAD,IAA0BA,oBAAoB,GAAGC,MAAvB,CAA8BV,MAA9B;AAFX,CAAD,CAA5B;AAQA,SAASE,eAAT,EAA0BE,eAA1B;AACA,eAAeE,KAAf"},"metadata":{},"sourceType":"module"}