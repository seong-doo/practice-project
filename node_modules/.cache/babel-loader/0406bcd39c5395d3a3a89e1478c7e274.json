{"ast":null,"code":"import{combineReducers,configureStore}from'@reduxjs/toolkit';import logger from'redux-logger';import filteredList,{setFilteredList}from'store/filteredList';import searchString,{setSearchString}from'store/searchString';var rootReducer=combineReducers({searchString:searchString,filteredList:filteredList});var store=configureStore({reducer:rootReducer,middleware:function middleware(getDefaultMiddleware){return getDefaultMiddleware().concat(logger);}});export{setFilteredList,setSearchString};export default store;","map":{"version":3,"names":["combineReducers","configureStore","logger","filteredList","setFilteredList","searchString","setSearchString","rootReducer","store","reducer","middleware","getDefaultMiddleware","concat"],"sources":["/Users/jeongseongdu/Downloads/git3/TEAM_5B/src/store/index.ts"],"sourcesContent":["import { combineReducers, configureStore } from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\n\nimport filteredList, { setFilteredList } from 'store/filteredList';\nimport searchString, { setSearchString } from 'store/searchString';\n\nconst rootReducer = combineReducers({\n  searchString,\n  filteredList,\n});\n\nconst store = configureStore({\n  reducer: rootReducer,\n  middleware: (getDefaultMiddleware) => getDefaultMiddleware().concat(logger),\n});\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n\nexport { setFilteredList, setSearchString };\nexport default store;\n"],"mappings":"AAAA,OAASA,eAAT,CAA0BC,cAA1B,KAAgD,kBAAhD,CACA,MAAOC,CAAAA,MAAP,KAAmB,cAAnB,CAEA,MAAOC,CAAAA,YAAP,EAAuBC,eAAvB,KAA8C,oBAA9C,CACA,MAAOC,CAAAA,YAAP,EAAuBC,eAAvB,KAA8C,oBAA9C,CAEA,GAAMC,CAAAA,WAAW,CAAGP,eAAe,CAAC,CAClCK,YAAY,CAAZA,YADkC,CAElCF,YAAY,CAAZA,YAFkC,CAAD,CAAnC,CAKA,GAAMK,CAAAA,KAAK,CAAGP,cAAc,CAAC,CAC3BQ,OAAO,CAAEF,WADkB,CAE3BG,UAAU,CAAE,oBAACC,oBAAD,QAA0BA,CAAAA,oBAAoB,GAAGC,MAAvB,CAA8BV,MAA9B,CAA1B,EAFe,CAAD,CAA5B,CAQA,OAASE,eAAT,CAA0BE,eAA1B,EACA,cAAeE,CAAAA,KAAf"},"metadata":{},"sourceType":"module"}